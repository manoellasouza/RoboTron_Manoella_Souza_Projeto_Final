<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.5 on win32)" generated="20220812 15:09:34.083" rpa="false" schemaversion="3">
<suite id="s1" name="Base" source="D:\Pessoal\SENAC\Estágio\Compass\Sprint 5 - Robot-Framework em APIs\CHALLENGE\base.robot">
<test id="s1-t1" name="Cenario: POST Criar Produto 201" line="63">
<kw name="Criar Sessao">
<kw name="Create Session" library="RequestsLibrary">
<arg>serverest</arg>
<arg>https://serverest.dev/</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220812 15:09:34.278" level="INFO">Creating Session using : alias=serverest, url=https://serverest.dev/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.278"/>
</kw>
<status status="PASS" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.278"/>
</kw>
<kw name="POST Endpoint /produtos" library="produtos_keywords">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{header}</var>
<arg>Authorization=${token_auth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220812 15:09:34.278" level="INFO">&amp;{header} = { Authorization=Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3Rlc1VzZXJAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJjb250YURlVGVzdGUzMjIxIiwiaWF0IjoxNjYwMzI3NjA0LCJleHAiOjE2NjAzMjgyMDR9.uNIV4Bv_pcc...</msg>
<status status="PASS" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.278"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{payload}</var>
<arg>nome=Cadeira Gamer do Paraguai</arg>
<arg>preco=5200</arg>
<arg>descricao=Cadeira</arg>
<arg>quantidade=285</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220812 15:09:34.278" level="INFO">&amp;{payload} = { nome=Cadeira Gamer do Paraguai | preco=5200 | descricao=Cadeira | quantidade=285 }</msg>
<status status="PASS" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.278"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>serverest</arg>
<arg>/produtos</arg>
<arg>data=&amp;{payload}</arg>
<arg>headers=&amp;{header}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220812 15:09:34.643" level="INFO">POST Request : url=https://serverest.dev/produtos 
 path_url=/produtos 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3Rlc1VzZXJAcWEuY29tLmJyIiwicGFzc3dvcmQiOiJjb250YURlVGVzdGUzMjIxIiwiaWF0IjoxNjYwMzI3NjA0LCJleHAiOjE2NjAzMjgyMDR9.uNIV4Bv_pcc7oYlA2cWx4JaeWbnD2KL0XinN30Ti6-k', 'Content-Length': '74', 'Content-Type': 'application/x-www-form-urlencoded'} 
 body=nome=Cadeira+Gamer+do+Paraguai&amp;preco=5200&amp;descricao=Cadeira&amp;quantidade=285 
 </msg>
<msg timestamp="20220812 15:09:34.643" level="INFO">POST Response : url=https://serverest.dev/produtos 
 status=400, reason=Bad Request 
 headers={'access-control-allow-origin': '*', 'x-dns-prefetch-control': 'off', 'x-frame-options': 'SAMEORIGIN', 'strict-transport-security': 'max-age=15552000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-xss-protection': '1; mode=block', 'x-moesif-transaction-id': 'a70785bf-11dd-464f-801a-c3418b3a7562', 'content-type': 'application/json; charset=utf-8', 'X-Cloud-Trace-Context': '3ef3bc1706016f3aa407f495ba154a43;o=1', 'Date': 'Fri, 12 Aug 2022 18:09:33 GMT', 'Server': 'Google Frontend', 'Content-Length': '53'} 
 body={
    "message": "Já existe produto com esse nome"
} 
 </msg>
<msg timestamp="20220812 15:09:34.643" level="INFO">C:\Users\manoe\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1043: InsecureRequestWarning: Unverified HTTPS request is being made to host 'serverest.dev'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220812 15:09:34.659" level="FAIL">HTTPError: 400 Client Error: Bad Request for url: https://serverest.dev/produtos</msg>
<status status="FAIL" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.659"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response: ${response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220812 15:09:34.659" endtime="20220812 15:09:34.659"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20220812 15:09:34.659" endtime="20220812 15:09:34.659"/>
</kw>
<status status="FAIL" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.659"/>
</kw>
<kw name="Validar Status Code &quot;201&quot;" sourcename="Validar Status Code &quot;${statuscode}&quot;">
<status status="NOT RUN" starttime="20220812 15:09:34.659" endtime="20220812 15:09:34.659"/>
</kw>
<tag>POSTPRODUTOS</tag>
<status status="FAIL" starttime="20220812 15:09:34.278" endtime="20220812 15:09:34.659">HTTPError: 400 Client Error: Bad Request for url: https://serverest.dev/produtos</status>
</test>
<doc>Arquivo simples para requisições HTTP em APIs REST</doc>
<status status="FAIL" starttime="20220812 15:09:34.083" endtime="20220812 15:09:34.659"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">POSTPRODUTOS</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Base">Base</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
